worker_processes  1;

error_log  logs/error.log  info;
pid        logs/nginx.pid;

events {
    worker_connections  1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    sendfile        on;
    tcp_nopush      on;
    tcp_nodelay     on;
    keepalive_timeout  65s;

    # Needed to read POST bodies in access/rewrite phases
    lua_need_request_body on;

    # DNS resolver for upstream name resolution
    resolver 1.1.1.1 8.8.8.8 valid=300s ipv6=off;

    # Upstream to GitHub over TLS with keepalive
    upstream github_upstream {
        server github.com:443;
        keepalive 64;
    }

    # Preserve forwarded proto
    map $http_x_forwarded_proto $forwarded_proto {
        default $http_x_forwarded_proto;
        ""      $scheme;
    }

    server {
        listen       0.0.0.0:7070;
        server_name  _;

        # Default catch-all: stream requests to GitHub
        location / {
            proxy_set_header Host github.com;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $forwarded_proto;
            proxy_http_version 1.1;
            proxy_ssl_server_name on;

            # Increase response header buffers to avoid
            # "upstream sent too big header" on HEAD /
            proxy_buffer_size 16k;
            proxy_buffers 8 16k;
            proxy_busy_buffers_size 64k;

            # Rewrite absolute redirects back through this proxy
            proxy_redirect https://github.com/ /;

            # Stream request/response bodies for large packfiles
            proxy_request_buffering off;
            proxy_buffering off;
            proxy_read_timeout 3600s;
            proxy_send_timeout 3600s;
            proxy_connect_timeout 30s;

            proxy_pass https://github_upstream;
        }

        # Special-case: GET *.git/info/refs â€” small; prefer deterministic connection close
        location ~* \.git/info/refs$ {
            proxy_set_header Host github.com;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $forwarded_proto;
            proxy_http_version 1.1;
            proxy_ssl_server_name on;

            # Drop Accept-Encoding to avoid upstream compression/chunking
            proxy_set_header Accept-Encoding "";

            # Rewrite absolute redirects back through this proxy
            proxy_redirect https://github.com/ /;

            # Buffer response; hide TE and close connection to avoid midpath buffering quirks
            proxy_request_buffering on;
            proxy_buffering on;
            proxy_hide_header Transfer-Encoding;
            add_header Connection "close" always;

            proxy_read_timeout 120s;
            proxy_send_timeout 120s;
            proxy_connect_timeout 30s;

            proxy_pass https://github_upstream;
        }

        # Special-case: POST ls-refs (git protocol v2) to upload/receive-pack
        # Detect via body, and internally route to a buffered variant
        location ~* \.git/(git-upload-pack|git-receive-pack)$ {
            # Detect ls-refs without fetch; mark in ctx
            access_by_lua_block {
                -- Safely read body (may be empty)
                ngx.req.read_body()
                local data = ngx.req.get_body_data()
                if data and data:find("command=ls%-refs", 1, true) and not data:find("command=fetch", 1, true) then
                    ngx.ctx._lsrefs = true
                end
            }

            # If ls-refs, jump to buffered location with Accept-Encoding dropped
            rewrite_by_lua_block {
                if ngx.ctx._lsrefs then
                    return ngx.exec("@lsrefs_buffered")
                end
            }

            # Default path: stream body (fetch/packfile etc.)
            proxy_set_header Host github.com;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $forwarded_proto;
            proxy_http_version 1.1;
            proxy_ssl_server_name on;

            proxy_redirect https://github.com/ /;

            proxy_request_buffering off;
            proxy_buffering off;
            proxy_read_timeout 3600s;
            proxy_send_timeout 3600s;
            proxy_connect_timeout 30s;

            proxy_pass https://github_upstream;
        }

        # Buffered path for ls-refs: drop accept-encoding, hide TE, and close
        location @lsrefs_buffered {
            proxy_set_header Host github.com;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $forwarded_proto;
            proxy_http_version 1.1;
            proxy_ssl_server_name on;

            proxy_set_header Accept-Encoding "";
            proxy_redirect https://github.com/ /;

            proxy_request_buffering on;
            proxy_buffering on;
            proxy_hide_header Transfer-Encoding;
            add_header Connection "close" always;

            proxy_read_timeout 120s;
            proxy_send_timeout 120s;
            proxy_connect_timeout 30s;

            proxy_pass https://github_upstream;
        }
    }
}
